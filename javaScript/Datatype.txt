Datatypes: There are different types of values and data that can be stored in JavaScript variables. For the machine to be able to operate on variables,
and correctly evaluate the expressions it is important to know about the type of variables involved. 
There are following primitive and non-primitive datatypes in JavaScript:
primitive ->
Number	These are just numeric values. They can be real or integers.	var x= number;

String	It is of series of multiple characters written within double or single quotes.	var x= “characters”;

Boolean	It can have only two values true or false.	var x= true/false;

Null	It is a special value that represents that the variable is empty or has an unknown value. it is Equivalent to an empty string or 0.	var x= null;

Undefined	It represents that the variable is declared but not assigned any value. 
A variable can also be emptied by setting the value to undefined.	let x; / let x= undefined;

non-primitive->
Object	It is a complex data type that allows us to store a collection of data. It contains properties defined as key-value pair.	
var x= {

key: “value”;

key: “value”;}

Array	It is a datatype used to store multiple values in a single variable. 
each value(element) has a numeric position(index) which starts from 0 , and it may contain data of any data type and even other arrays.	
var x =[‘y1’, ‘y2′,’y3′,’y4’];

y: any datatype

Function	In JavaScript all functions are objects that can be called to execute a block of code. 
Since functions are objects, so it is possible to assign them to variables. They can be stored in variables, objects,
and arrays and also can be passed as arguments to other functions and returned from functions.	
function x(arguments){

block of code

}
